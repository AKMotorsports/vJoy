<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <_LNG>$(LANGUAGE)</_LNG>
    <_INX>.</_INX>
  </PropertyGroup>
  <Choose>
    <When Condition="!('$(KMDF_VERSION_MINOR)'!='')">
      <PropertyGroup>
        <KMDF_VERSION_MINOR>5</KMDF_VERSION_MINOR>
      </PropertyGroup>
    </When>
  </Choose>
  <PropertyGroup>
    <STAMP>stampinf -f %24%40 -a $(_BUILDARCH) -k $(KMDF_VERSION_MAJOR).$(KMDF_VERSION_MINOR)</STAMP>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(_BUILDARCH)'=='AMD64'">
      <PropertyGroup>
        <CAT>INF2CAT /driver:$(INSTALL_DIR)\$(O)  /os:Vista_X64,7_x64</CAT>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <CAT>INF2CAT /driver:$(INSTALL_DIR)\$(O)  /os:XP_X86,Vista_x86</CAT>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <PropertyGroup>
    <SIGN>signtool sign /a /v /s PrivateCertStore  $(INSTALL_DIR)\$(O)\*.cat</SIGN>
  </PropertyGroup>
  <Choose>
    <When Condition="$(KMDF_VERSION_MAJOR)&lt;10">
      <PropertyGroup>
        <KMDF_MAJOR_VERSION_STRING>0$(KMDF_VERSION_MAJOR)</KMDF_MAJOR_VERSION_STRING>
      </PropertyGroup>
    </When>
    <When Condition="$(KMDF_VERSION_MAJOR)&lt;10">
      <PropertyGroup>
        <KMDF_MAJOR_VERSION_STRING>$(KMDF_VERSION_MAJOR)</KMDF_MAJOR_VERSION_STRING>
      </PropertyGroup>
    </When>
    <Otherwise />
  </Choose>
  <Choose>
    <When Condition="$(KMDF_VERSION_MINOR)&lt;10">
      <PropertyGroup>
        <KMDF_MINOR_VERSION_STRING>00$(KMDF_VERSION_MINOR)</KMDF_MINOR_VERSION_STRING>
      </PropertyGroup>
    </When>
    <When Condition="$(KMDF_VERSION_MINOR)&lt;100">
      <PropertyGroup>
        <KMDF_MINOR_VERSION_STRING>0$(KMDF_VERSION_MINOR)</KMDF_MINOR_VERSION_STRING>
      </PropertyGroup>
    </When>
    <When Condition="$(KMDF_VERSION_MINOR)&lt;1000">
      <PropertyGroup>
        <KMDF_MINOR_VERSION_STRING>$(KMDF_VERSION_MINOR)</KMDF_MINOR_VERSION_STRING>
      </PropertyGroup>
    </When>
    <Otherwise />
  </Choose>
  <PropertyGroup>
    <KMDF_VERSION_STRING>$(KMDF_MAJOR_VERSION_STRING)$(KMDF_MINOR_VERSION_STRING)</KMDF_VERSION_STRING>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(_BUILDARCH)'=='AMD64'">
      <PropertyGroup>
        <SHIM_SRC>$(INSTALL_DIR)\$(SHIM_X64)</SHIM_SRC>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <SHIM_SRC>$(INSTALL_DIR)\$(SHIM_X86)</SHIM_SRC>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <NmakeTarget Include="$(_INX)\$(INF_NAME).inx">
      <TargetKillSwitch>ConvertedTarget0_Disabled</TargetKillSwitch>
      <TargetName>Converted Target 0</TargetName>
      <Outputs>$(OBJ_PATH)\$(O)\$(INF_NAME).inf</Outputs>
      <Condition>
      </Condition>
      <Cmd0>copy $(_INX)\%24%28%40B%29.inx %24%40</Cmd0>
      <Cmd1>$(STAMP)</Cmd1>
    </NmakeTarget>
  </ItemGroup>
  <Target Name="Converted Target 0" BeforeTargets="$(BuildGenerateSourcesTargets)" Condition="'$(ConvertedTarget0_Disabled)'!='true'">
    <ItemGroup>
      <AllEvaluatedTargetInputs Remove="@(AllEvaluatedTargetInputs)" />
      <t_TargetInput_0 Remove="@(t_TargetInput_0)" />
      <t_TargetInput_0 Include="$(_INX)\$(INF_NAME).inx" Condition="Exists('$(_INX)\$(INF_NAME).inx') And ('@(t_TargetInput_0)'=='')" />
      <t_TargetInput_0 Include="$(_INX)\$(INF_NAME).inx" Condition="'@(t_TargetInput_0)'==''" />
      <AllEvaluatedTargetInputs Include="@(t_TargetInput_0);" />
    </ItemGroup>
    <ReplaceNmakeCommandTokens Command="copy $(_INX)\%24%28%40B%29.inx %24%40" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(OBJ_PATH)\$(O)\$(INF_NAME).inf">
      <Output TaskParameter="ShouldExecute" PropertyName="TargetOutDated" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_1" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_1)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="$(STAMP)" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(OBJ_PATH)\$(O)\$(INF_NAME).inf">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_2" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_2)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Condition="'$(TargetOutDated)'!='true'" Text="File $(OBJ_PATH)\$(O)\$(INF_NAME).inf is up-to-date" />
  </Target>
  <ItemGroup>
    <NmakeTarget Include="$(OBJ_PATH)\$(O)\$(TARGETNAME).sys">
      <TargetKillSwitch>ConvertedTarget2_Disabled</TargetKillSwitch>
      <TargetName>Converted Target 2</TargetName>
      <Outputs>$(INSTALL_DIR)\$(O)\$(TARGETNAME).sys</Outputs>
      <Condition>
      </Condition>
      <Cmd0>signtool sign /a /v /s PrivateCertStore $(OBJ_PATH)\$(O)\$(TARGETNAME).sys</Cmd0>
      <Cmd1>if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)</Cmd1>
      <Cmd2>copy $(OBJ_PATH)\$(O)\$(TARGETNAME).sys  %24%40</Cmd2>
    </NmakeTarget>
  </ItemGroup>
  <Target Name="Converted Target 2" BeforeTargets="$(AfterBuildLinkTargets)" AfterTargets="$(BuildLinkTargets)" Condition="'$(ConvertedTarget2_Disabled)'!='true'">
    <ItemGroup>
      <AllEvaluatedTargetInputs Remove="@(AllEvaluatedTargetInputs)" />
      <t_TargetInput_0 Remove="@(t_TargetInput_0)" />
      <t_TargetInput_0 Include="$(OBJ_PATH)\$(O)\$(TARGETNAME).sys" Condition="Exists('$(OBJ_PATH)\$(O)\$(TARGETNAME).sys') And ('@(t_TargetInput_0)'=='')" />
      <t_TargetInput_0 Include="$(OBJ_PATH)\$(O)\$(TARGETNAME).sys" Condition="'@(t_TargetInput_0)'==''" />
      <AllEvaluatedTargetInputs Include="@(t_TargetInput_0);" />
    </ItemGroup>
    <ReplaceNmakeCommandTokens Command="signtool sign /a /v /s PrivateCertStore $(OBJ_PATH)\$(O)\$(TARGETNAME).sys" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(TARGETNAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="TargetOutDated" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_1" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_1)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(TARGETNAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_2" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_2)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="copy $(OBJ_PATH)\$(O)\$(TARGETNAME).sys  %24%40" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(TARGETNAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_3" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_3)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Condition="'$(TargetOutDated)'!='true'" Text="File $(INSTALL_DIR)\$(O)\$(TARGETNAME).sys is up-to-date" />
  </Target>
  <ItemGroup>
    <NmakeTarget Include=" ">
      <TargetKillSwitch>ConvertedTarget3_Disabled</TargetKillSwitch>
      <TargetName>Converted Target 3</TargetName>
      <Outputs>$(INSTALL_DIR)\$(O)\$(SHIM_NAME).sys</Outputs>
      <Condition>
      </Condition>
      <Cmd0>if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)</Cmd0>
      <Cmd1>signtool sign /a /v /s PrivateCertStore $(SHIM_DIR)\$(O)\$(SHIM_NAME).sys</Cmd1>
      <Cmd2>copy $(SHIM_DIR)\$(O)\$(SHIM_NAME).sys  %24%40</Cmd2>
    </NmakeTarget>
  </ItemGroup>
  <Target Name="Converted Target 3" BeforeTargets="$(AfterBuildLinkTargets)" AfterTargets="$(BuildLinkTargets)" Condition="'$(ConvertedTarget3_Disabled)'!='true'">
    <ItemGroup>
      <AllEvaluatedTargetInputs Remove="@(AllEvaluatedTargetInputs)" />
      <AllEvaluatedTargetInputs Include=" " />
    </ItemGroup>
    <ReplaceNmakeCommandTokens Command="if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(SHIM_NAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="TargetOutDated" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_1" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_1)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="signtool sign /a /v /s PrivateCertStore $(SHIM_DIR)\$(O)\$(SHIM_NAME).sys" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(SHIM_NAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_2" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_2)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="copy $(SHIM_DIR)\$(O)\$(SHIM_NAME).sys  %24%40" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(SHIM_NAME).sys">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_3" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_3)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Condition="'$(TargetOutDated)'!='true'" Text="File $(INSTALL_DIR)\$(O)\$(SHIM_NAME).sys is up-to-date" />
  </Target>
  <ItemGroup>
    <NmakeTarget Include=" ">
      <TargetKillSwitch>ConvertedTarget4_Disabled</TargetKillSwitch>
      <TargetName>Converted Target 4</TargetName>
      <Outputs>$(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE).dll</Outputs>
      <Condition>
      </Condition>
      <Cmd0>if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)</Cmd0>
      <Cmd1>copy $(BASEDIR)\redist\wdf\$(_BUILDARCH)\$(WUDFUPDATE_BASE)$(KMDF_VERSION_STRING).dll   	$(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE)$(KMDF_VERSION_STRING).dll</Cmd1>
    </NmakeTarget>
  </ItemGroup>
  <Target Name="Converted Target 4" BeforeTargets="$(AfterBuildLinkTargets)" AfterTargets="$(BuildLinkTargets)" Condition="'$(ConvertedTarget4_Disabled)'!='true'">
    <ItemGroup>
      <AllEvaluatedTargetInputs Remove="@(AllEvaluatedTargetInputs)" />
      <AllEvaluatedTargetInputs Include=" " />
    </ItemGroup>
    <ReplaceNmakeCommandTokens Command="if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE).dll">
      <Output TaskParameter="ShouldExecute" PropertyName="TargetOutDated" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_1" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_1)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="copy $(BASEDIR)\redist\wdf\$(_BUILDARCH)\$(WUDFUPDATE_BASE)$(KMDF_VERSION_STRING).dll   	$(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE)$(KMDF_VERSION_STRING).dll" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE).dll">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_2" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_2)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Condition="'$(TargetOutDated)'!='true'" Text="File $(INSTALL_DIR)\$(O)\$(WUDFUPDATE_BASE).dll is up-to-date" />
  </Target>
  <ItemGroup>
    <NmakeTarget Include=" ">
      <TargetKillSwitch>ConvertedTarget5_Disabled</TargetKillSwitch>
      <TargetName>Converted Target 5</TargetName>
      <Outputs>$(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE).dll</Outputs>
      <Condition>
      </Condition>
      <Cmd0>if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)</Cmd0>
      <Cmd1>copy $(BASEDIR)\redist\wdf\$(_BUILDARCH)\$(WDFCOINST_BASE)$(KMDF_VERSION_STRING).dll   	$(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE)$(KMDF_VERSION_STRING).dll</Cmd1>
    </NmakeTarget>
  </ItemGroup>
  <Target Name="Converted Target 5" BeforeTargets="$(AfterBuildLinkTargets)" AfterTargets="$(BuildLinkTargets)" Condition="'$(ConvertedTarget5_Disabled)'!='true'">
    <ItemGroup>
      <AllEvaluatedTargetInputs Remove="@(AllEvaluatedTargetInputs)" />
      <AllEvaluatedTargetInputs Include=" " />
    </ItemGroup>
    <ReplaceNmakeCommandTokens Command="if not exist $(INSTALL_DIR)\$(O) mkdir $(INSTALL_DIR)\$(O)" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE).dll">
      <Output TaskParameter="ShouldExecute" PropertyName="TargetOutDated" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_1" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_1)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <ReplaceNmakeCommandTokens Command="copy $(BASEDIR)\redist\wdf\$(_BUILDARCH)\$(WDFCOINST_BASE)$(KMDF_VERSION_STRING).dll   	$(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE)$(KMDF_VERSION_STRING).dll" TaskInputFiles="@(AllEvaluatedTargetInputs)" TaskOutputFile="$(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE).dll">
      <Output TaskParameter="ShouldExecute" PropertyName="Junk_Property" />
      <Output TaskParameter="ProcessedCommand" PropertyName="ResolvedCommand_2" />
    </ReplaceNmakeCommandTokens>
    <Exec Condition="'$(TargetOutDated)'=='true'" Command="$(ResolvedCommand_2)" WorkingDirectory="$(MSBuildProjectDirectory)" />
    <Message Condition="'$(TargetOutDated)'!='true'" Text="File $(INSTALL_DIR)\$(O)\$(WDFCOINST_BASE).dll is up-to-date" />
  </Target>
</Project>